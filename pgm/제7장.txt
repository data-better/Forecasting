setwd("i:/2014/data")
#library(tseries)

## 데이터 읽기 ##

library(quantmod)
# Yahoo! Finance로터 종합주가지수 종가 데이터 가져오기 
kospi <- getSymbols("^KS11", auto.assign = FALSE)[,4]
er    <- getSymbols("KRW=X", auto.assign = FALSE)[,4]

kospi_r <- dailyReturn(kospi)
er_r    <- dailyReturn(er)

fin1 = merge(kospi, er)

# Fig 7-1
plot(fin1[,1], type="l", main="")
 lines(fin2[,2], col=2)

# Fig 7-2
plot(as.matrix(fin1), xlab="종합주가지수", ylab="원/달러 환율")

cor(na.omit(as.matrix(fin1)))


setwd("i:/저작물/예측방법론_수정/data")
#setwd("c:/work/data")

# Figure 3-1
gdp <- read.csv("gdpq.csv", header = TRUE)
 gdp_o  <- ts(gdp[,1]/1000, start=1970, frequency=4)
 gdp_sa <- ts(gdp[,2]/1000, start=1970, frequency=4)
 gdp_gr <- ts((gdp_sa-lag(gdp_sa,-1))/lag(gdp_sa,-1)*100,  start=c(1970,2), frequency=4)
ccf(gdp_gr, lag(gdp_gr,-1), lag=12, main=" ")

bc <- ts(read.csv("bc.csv", header = TRUE), start=1970, frequency=12)
ccf(bc[,1], bc[,2], lag=12, main=" ")


gdp_m <- ts(read.csv("gdp_m.csv", header = TRUE), start=1980, frequency=12)
 gdpm <-gdp_m[,2]
 ipim <-gdp_m[,3] 
 gdp_m_gr <- ts((gdpm-lag(gdpm,-1))/lag(gdpm,-1)*100,  start=c(1980,2), frequency=4)
 ipi_m_gr <- ts((ipim-lag(ipim,-1))/lag(ipim,-1)*100,  start=c(1980,2), frequency=4)

plot(as.numeric(ipi_m_gr), as.numeric(gdp_m_gr), xlab="제조업 산업생산지수", ylab="제조업 GDP")
abline(lm(gdp_m_gr~ipi_m_gr), col=2)

gdpr = "https://raw.githubusercontent.com/data-better/Forecasting/gh-pages/data/gdpr.csv"
econ = ts(read.csv(gdpr, header=TRUE), start=2000, frequency=4)
gdp_r=econ[,4]
ipi_r=econ[,5]
sbi_r=econ[,6]
dum1 =econ[,7]
dum2 =econ[,8]

gr1 = ts.union(gdp_r, ipi_r, sbi_r, dum1, dum2)
plot(gr1, main="", xlab="", col="steelblue")

gdp_r_lm = lm(gdp_r~ipi_r+sbi_r, data=gr1)
summary(gdp_r_lm)

plot(gdp_r, col="steelblue", ylim=c(-2,10), ylab="", xlab="")
lines(ts(predict(gdp_r_lm), start=c(2001,1), freq=4), col=2)

library(car)
durbinWatsonTest(gdp_r_lm)

gr2 = ts.union(gdp_r, ipi_r, sbi_r, gdp_r1=lag(gdp_r,-1))

gdp_r_lmc = lm(gdp_r ~ ipi_r+sbi_r+gdp_r1, data=gr2)
durbinWatsonTest(gdp_r_lmc)
summary(gdp_r_lmc)

plot(gdp_r, col="steelblue", ylim=c(-2,10), ylab="", xlab="")
lines(ts(predict(gdp_r_lmc), start=c(2001,1), freq=4), col=2)

library(orcutt)

gdp_r_lm_co = cochrane.orcutt(gdp_r_lm)
plot(gdp_r, col="steelblue", ylim=c(-2,10), ylab="", xlab="")
lines(ts(predict(gdp_r_lm_co), start=c(2001,1), freq=4), col=2)


library(forecast)

fit <- auto.arima(gdp_r, xreg=cbind(ipi_r,sbi_r))
tsdisplay(arima.errors(fit))
Box.test(residuals(fit), type="Ljung", lag=8)

fcast <- forecast(fit, xreg=cbind( rep(mean(ipi_r[53:57], 4)), rep(mean(sbi_r[53:57]), 4) ), h=4)
plot(fcast, main="")

fit1 <- Arima(gdp_r, xreg=cbind(ipi_r,sbi_r), order=c(1,0,0))
tsdisplay(residuals(fit1))
Box.test(residuals(fit1), type="Ljung")

########################################################################

econ = read.ts("gdp_sa_r.csv", start=2000, frequency=4, header=TRUE,sep=",")
ipi_sa_r=econ[,5]
sbi_sa_r=econ[,4]
gdp_sa_r=econ[,6]

gr1 = ts.union(gdp_sa_r, ipi_sa_r, sbi_sa_r, gdp_sa_r1=lag(gdp_sa_r,-1))

plot(gr1, main="", xlab="", col="steelblue")

gdp_r_lm = lm(gdp_sa_r~ipi_sa_r+sbi_sa_r, data=gr1)
summary(gdp_r_lm)

plot(gdp_sa_r, col="steelblue", ylim=c(-4,4), ylab="", xlab="")
lines(ts(predict(gdp_r_lm), start=c(2000,2), freq=4), col=2)

library(car)
durbinWatsonTest(gdp_r_lm)

gdp_r_lm_l = lm(gdp_sa_r~ipi_sa_r+sbi_sa_r+gdp_sa_r1, data=gr1)
summary(gdp_r_lm_l)
durbinWatsonTest(gdp_r_lm_l)
summary(gdp_r_lmc)

plot(gdp_r, col="steelblue", ylim=c(-2,10), ylab="", xlab="")
lines(ts(predict(gdp_r_lmc), start=c(2001,1), freq=4), col=2)

library(orcutt)

gdp_r_lm_co = cochrane.orcutt(gdp_r_lm)
plot(gdp_r, col="steelblue", ylim=c(-2,10), ylab="", xlab="")
lines(ts(predict(gdp_r_lm_co), start=c(2001,1), freq=4), col=2)
